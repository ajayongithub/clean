<?php

/**
 * This is the model base class for the table "payment_details".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PaymentDetails".
 *
 * Columns in table "payment_details" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $order_id
 * @property string $payment_id
 * @property string $payment_issue_date
 * @property string $payment_confirm_date
 * @property double $amount
 * @property string $payment_type
 * @property string $status
 * @property string $extra1
 *
 */
abstract class BasePaymentDetails extends GxActiveRecord {
	public $_firstname;
	public $_lastname;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'payment_details';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PaymentDetails|PaymentDetails', $n);
	}

	public static function representingColumn() {
		return 'payment_issue_date';
	}

	public function rules() {
		return array(
			array('order_id, payment_issue_date, amount, payment_type', 'required'),
			array('order_id', 'numerical', 'integerOnly'=>true),
			array('amount', 'numerical'),
			array('payment_id, extra1', 'length', 'max'=>256),
			array('payment_type, status', 'length', 'max'=>128),
			array('payment_confirm_date', 'safe'),
			array('payment_id, payment_confirm_date, status, extra1', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, order_id, payment_id, payment_issue_date, payment_confirm_date, amount, payment_type, status, extra1,firstname,lastname', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		'order' => array(self::BELONGS_TO, 'Orders', 'order_id'),
		/*'user'=>array(
            self::BELONGS_TO,'User',array('user_id'=>'id'),'through'=>'order'
        ),
        'profiles'=>array(
            self::HAS_MANY,'Profile',array('id'=>'user_id'),'through'=>'user'
        ),*/
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'order_id' => Yii::t('app', 'Order'),
			'payment_id' => Yii::t('app', 'Payment ID'),
			'payment_issue_date' => Yii::t('app', 'Payment Issue Date'),
			'payment_confirm_date' => Yii::t('app', 'Payment Confirm Date'),
			'amount' => Yii::t('app', 'Amount'),
			'payment_type' => Yii::t('app', 'Payment Type'),
			'status' => Yii::t('app', 'Status'),
			'extra1' => Yii::t('app', 'Extra1'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
//		$criteria->with = array('order' => array('alias'=>'order_alias'));
		$criteria->with  = array('order','order.user'=>array('alias'=>'us'),'order.user.profile');
		$criteria->compare('id', $this->id);
		$criteria->compare('order_id', $this->order_id);
		$criteria->compare('payment_id', $this->payment_id, true);
		$criteria->compare('payment_issue_date', $this->payment_issue_date, true);
		$criteria->compare('payment_confirm_date', $this->payment_confirm_date, true);
		$criteria->compare('amount', $this->amount);
		$criteria->compare('payment_type', $this->payment_type, true);
		$criteria->compare('t.status', $this->status, true);
		$criteria->compare('extra1', $this->extra1, true);
		$criteria->compare('firstname', $this->_firstname, true);
		$criteria->compare('lastname', $this->_lastname, true);
	
		$sort = new CSort();
		$sort->attributes = array(
    'defaultOrder'=>'payment_id DESC',
    'id'=>array(
        'asc'=>'id',
        'desc'=>'id desc',
    ),
    'payment_id'=>array(
        'asc'=>'payment_id',
        'desc'=>'payment_id desc',
    ),
    'payment_issue_date'=>array(
        'asc'=>'payment_issue_date',
        'desc'=>'payment_issue_date desc',
    ),
    'payment_type'=>array(
        'asc'=>'payment_type',
        'desc'=>'payment_type desc',
    ),
    'status'=>array(
        'asc'=>'t.status',
        'desc'=>'t.status desc',
    ),
    'firstname'=>array(
    	'asc'=>'firstname',
    	'desc'=>'firstname desc',
    ),
    'lastname'=>array(
    	'asc'=>'lastname',
    	'desc'=>'lastname desc',
    ),
	);
		
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>$sort,
		));
	}
	
	public function getFirstname(){
	if ($this->_firstname=== null && $this->order!== null) {
    	    $this->_firstname = $this->order->user->profile->firstname;
    	}
		return $this->_firstname ;
	}
	public function setFirstname($value){
		$this->_firstname = $value ;
	
	}
	public function getLastname(){
	if ($this->_lastname=== null && $this->order!== null) {
    	    $this->_lastname = $this->order->user->profile->lastname;
    	}
		return $this->_lastname ;
	}
	public function setLastname($value){
		$this->_lastname = $value ;
	
	}
}