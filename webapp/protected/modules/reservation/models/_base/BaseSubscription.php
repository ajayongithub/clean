<?php

/**
 * This is the model base class for the table "subscription".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Subscription".
 *
 * Columns in table "subscription" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $plan_id
 * @property string $start_date
 * @property string $expiry_date
 * @property integer $last_service
 * @property string $last_service_on
 * @property integer $service_number
 * @property double $amount
 * @property string $remarks
 *
 */
abstract class BaseSubscription extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subscription';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Subscription|Subscriptions', $n);
	}

	public static function representingColumn() {
		return 'start_date';
	}

	public function rules() {
		return array(
			array('user_id, plan_id, start_date, expiry_date', 'required'),
			array('user_id, plan_id, last_service, service_number', 'numerical', 'integerOnly'=>true),
			array('amount', 'numerical'),
			array('remarks', 'length', 'max'=>256),
			array('last_service_on', 'safe'),
			array('last_service, last_service_on, service_number, amount, remarks', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, plan_id, start_date, expiry_date, last_service, last_service_on, service_number, amount, remarks', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'plan_id' => Yii::t('app', 'Plan'),
			'start_date' => Yii::t('app', 'Start Date'),
			'expiry_date' => Yii::t('app', 'Expiry Date'),
			'last_service' => Yii::t('app', 'Last Service'),
			'last_service_on' => Yii::t('app', 'Last Service On'),
			'service_number' => Yii::t('app', 'Service Number'),
			'amount' => Yii::t('app', 'Amount'),
			'remarks' => Yii::t('app', 'Remarks'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('plan_id', $this->plan_id);
		$criteria->compare('start_date', $this->start_date, true);
		$criteria->compare('expiry_date', $this->expiry_date, true);
		$criteria->compare('last_service', $this->last_service);
		$criteria->compare('last_service_on', $this->last_service_on, true);
		$criteria->compare('service_number', $this->service_number);
		$criteria->compare('amount', $this->amount);
		$criteria->compare('remarks', $this->remarks, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}