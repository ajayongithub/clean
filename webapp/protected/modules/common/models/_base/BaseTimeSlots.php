<?php

/**
 * This is the model base class for the table "time_slots".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TimeSlots".
 *
 * Columns in table "time_slots" available as properties of the model,
 * followed by relations of table "time_slots" available as properties of the model.
 *
 * @property integer $id
 * @property string $slot_name
 * @property string $slot_begin
 * @property string $slot_end
 * @property string $remarks
 *
 * @property LocationSchedule[] $locationSchedules
 */
abstract class BaseTimeSlots extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'time_slots';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TimeSlots|TimeSlots', $n);
	}

	public static function representingColumn() {
		return 'slot_name';
	}

	public function rules() {
		return array(
			array('slot_name, slot_begin, slot_end', 'required'),
			array('slot_name', 'length', 'max'=>128),
			array('remarks', 'length', 'max'=>256),
			array('remarks', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, slot_name, slot_begin, slot_end, remarks', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'locationSchedules' => array(self::HAS_MANY, 'LocationSchedule', 'ts_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'slot_name' => Yii::t('app', 'Slot Name'),
			'slot_begin' => Yii::t('app', 'Slot Begin'),
			'slot_end' => Yii::t('app', 'Slot End'),
			'remarks' => Yii::t('app', 'Remarks'),
			'locationSchedules' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('slot_name', $this->slot_name, true);
		$criteria->compare('slot_begin', $this->slot_begin, true);
		$criteria->compare('slot_end', $this->slot_end, true);
		$criteria->compare('remarks', $this->remarks, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}